"use strict";(self.webpackChunklibrephotos_docs=self.webpackChunklibrephotos_docs||[]).push([[8962],{3905:(e,t,i)=>{i.d(t,{Zo:()=>d,kt:()=>h});var n=i(7294);function a(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function r(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function l(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?r(Object(i),!0).forEach((function(t){a(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function o(e,t){if(null==e)return{};var i,n,a=function(e,t){if(null==e)return{};var i,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)i=r[n],t.indexOf(i)>=0||(a[i]=e[i]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)i=r[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(a[i]=e[i])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),i=t;return e&&(i="function"==typeof e?e(t):l(l({},t),e)),i},d=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var i=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=p(i),c=a,h=m["".concat(s,".").concat(c)]||m[c]||u[c]||r;return i?n.createElement(h,l(l({ref:t},d),{},{components:i})):n.createElement(h,l({ref:t},d))}));function h(e,t){var i=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=i.length,l=new Array(r);l[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[m]="string"==typeof e?e:a,l[1]=o;for(var p=2;p<r;p++)l[p]=i[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,i)}c.displayName="MDXCreateElement"},9300:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var n=i(7462),a=(i(7294),i(3905));const r={title:" \ud83d\uddbc Photo List",excerpt:"How to fetch alot of images as a developer",sidebar_position:5},l=void 0,o={unversionedId:"development/contribution/backend/photo-list",id:"development/contribution/backend/photo-list",title:" \ud83d\uddbc Photo List",description:"Endpoints:",source:"@site/docs/development/contribution/backend/photo-list.md",sourceDirName:"development/contribution/backend",slug:"/development/contribution/backend/photo-list",permalink:"/docs/development/contribution/backend/photo-list",draft:!1,editUrl:"https://github.com/LibrePhotos/librephotos.docs/tree/master/docs/development/contribution/backend/photo-list.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{title:" \ud83d\uddbc Photo List",excerpt:"How to fetch alot of images as a developer",sidebar_position:5},sidebar:"userguide",previous:{title:"\u2601\ufe0f Backend",permalink:"/docs/development/contribution/backend/"},next:{title:" \ud83d\udcc1 Upload",permalink:"/docs/development/contribution/backend/upload"}},s={},p=[{value:"Endpoints:",id:"endpoints",level:2},{value:"<code>GET /api/albums/date/list/</code>",id:"get-apialbumsdatelist",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"Headers:",id:"headers",level:4},{value:"<code>GET /api/albums/date/&lt;id&gt;</code>",id:"get-apialbumsdateid",level:3},{value:"Parameters:",id:"parameters-1",level:4},{value:"Headers:",id:"headers-1",level:4},{value:"How React Pig works",id:"how-react-pig-works",level:2}],d={toc:p},m="wrapper";function u(e){let{components:t,...i}=e;return(0,a.kt)(m,(0,n.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"endpoints"},"Endpoints:"),(0,a.kt)("h3",{id:"get-apialbumsdatelist"},(0,a.kt)("inlineCode",{parentName:"h3"},"GET /api/albums/date/list/")),(0,a.kt)("p",null,"Gives you a list of days with the number of elements. This is not paginated and can be large."),(0,a.kt)("h4",{id:"parameters"},"Parameters:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"?favorite=true")," - Give me the list for favorite images"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"?public=true")," - Give me the list for public images"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"?username=<name>")," - Give me the list of this users public images"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"?deleted=true")," - Give me the list for deleted images"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"?person=<id>")," - Give me the list for this person")),(0,a.kt)("h4",{id:"headers"},"Headers:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Authorization")," - ",(0,a.kt)("inlineCode",{parentName:"li"},"Bearer <token>"))),(0,a.kt)("h3",{id:"get-apialbumsdateid"},(0,a.kt)("inlineCode",{parentName:"h3"},"GET /api/albums/date/<id>")),(0,a.kt)("p",null,"Returns the actual images, for a given day in chunks of 100 images."),(0,a.kt)("h4",{id:"parameters-1"},"Parameters:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"?page=1")," - Give me the first page of the album"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"?favorite=true")," - Give me the list for favorite images"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"?public=true")," - Give me the list for public images"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"?username=<name>")," - Give me the list of this users public images"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"?deleted=true")," - Give me the list for deleted images"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"?person=<id>")," - Give me the list for this person")),(0,a.kt)("h4",{id:"headers-1"},"Headers:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Authorization")," - ",(0,a.kt)("inlineCode",{parentName:"li"},"Bearer <token>"))),(0,a.kt)("h2",{id:"how-react-pig-works"},"How React Pig works"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Fetch the number of days with the count of all images with ",(0,a.kt)("inlineCode",{parentName:"li"},"GET /api/albums/date/list/"),"."),(0,a.kt)("li",{parentName:"ul"},"Based on the number of photos per day, create a bunch of empty ",(0,a.kt)("inlineCode",{parentName:"li"},"<div/>")," with the attribute ",(0,a.kt)("inlineCode",{parentName:"li"},"isTemp")," and an ",(0,a.kt)("inlineCode",{parentName:"li"},"aspectRatio=1")," which will then be rendered as by react-pig."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"react-pig")," calculates a somewhat accurate height for scrolling based on the number of elements and the ",(0,a.kt)("inlineCode",{parentName:"li"},"aspectRatio"),"."),(0,a.kt)("li",{parentName:"ul"},"When scrolling, the ",(0,a.kt)("inlineCode",{parentName:"li"},"isTemp")," element is used to determine, if a currently visible element is actually loaded yet or not. If not, load the missing images with ",(0,a.kt)("inlineCode",{parentName:"li"},"GET /api/albums/date/4/"))))}u.isMDXComponent=!0}}]);